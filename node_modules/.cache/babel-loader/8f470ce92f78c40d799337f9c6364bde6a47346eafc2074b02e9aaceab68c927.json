{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"checkout\",\n  data() {\n    return {\n      status: \"\",\n      message: \"\",\n      name: \"\",\n      tarjeta: \"\",\n      expmonth: \"\",\n      expyear: \"\",\n      cvv: \"\",\n      wait: false,\n      viewModal: false,\n      err_cvv: false,\n      err_mm: false,\n      err_yy: false,\n      err_num: false,\n      err_nam: false,\n      act_cvv: false,\n      act_mm: false,\n      act_yy: false,\n      act_num: false,\n      act_nam: false\n    };\n  },\n  /*\r\n     4242424242424242\r\n    */\n  mounted() {\n    $(document).ready(function () {\n      /* OpenPay.setId('m0k8wleehyy9vgb1p4ie');\r\n            OpenPay.setApiKey('pk_50ce9f4f4be54881864d9a78eb925d48');\r\n            OpenPay.setSandboxMode(false);*/\n      OpenPay.setId(\"m8ckqeb3piuvny68ca2o\");\n      OpenPay.setApiKey(\"pk_44853576427b46cdb5d45336669555ce\");\n      OpenPay.setSandboxMode(true);\n      //Se genera el id de dispositivo\n      var deviceSessionId = OpenPay.deviceData.setup(\"payment-form\", \"deviceIdHiddenFieldName\");\n      $(\"#pay-button\").on(\"click\", function (event) {\n        event.preventDefault();\n        $(\"#pay-button\").prop(\"disabled\", true);\n        OpenPay.token.extractFormAndCreate(\"payment-form\", sucess_callbak, error_callbak);\n      });\n      var sucess_callbak = function (response) {\n        var token_id = response.data.id;\n        $(\"#token_id\").val(token_id);\n        // $('#payment-form').submit();\n        //ENVIAR a otra pagina.\n        let isval = execute();\n        if (isval.status == \"success\") {\n          charge(deviceSessionId, token_id);\n        } else {\n          showMessage(isval.message);\n        }\n\n        //console.log(token_id)\n        //console.log(deviceSessionId)\n      };\n\n      var error_callbak = function (response) {\n        var desc = response.data.description != undefined ? response.data.description : response.message;\n        let message = desc; //\"ERROR [\" + response.status + \"] : \" +\n        showMessage(message);\n        //console.log(message)\n        $(\"#pay-button\").prop(\"disabled\", false);\n      };\n    });\n    let showMessage = error => {\n      this.status = \"error\";\n      this.message = error;\n      this.delStatus();\n    };\n    let charge = (deviceSessionId, token_id) => {\n      this.wait = true;\n      this.createCharge(deviceSessionId, token_id);\n    };\n    let execute = () => {\n      return this.validar(this.name, this.tarjeta, this.expmonth, this.expyear, this.cvv);\n    };\n  },\n  watch: {\n    cvv: function (value) {\n      let arr = value.split(\"\");\n      let str = \"\";\n      let count = 0;\n      for (const ctr of arr) {\n        if (!isNaN(ctr) && count < 4 && ctr != \" \") {\n          str += ctr;\n          count++;\n        }\n      }\n      this.cvv = str;\n      if (this.cvv.length > 2) {\n        this.act_cvv = true;\n        this.err_cvv = false;\n      } else if (this.cvv) {\n        this.err_cvv = true;\n      } else {\n        this.err_cvv = false;\n        this.act_cvv = false;\n      }\n    },\n    expmonth: function (value) {\n      let arr = value.split(\"\");\n      let str = \"\";\n      let count = 0;\n      for (const ctr of arr) {\n        if (!isNaN(ctr) && count < 2 && ctr != \" \") {\n          let newstr = str + ctr;\n          newstr = parseInt(newstr);\n          if (newstr <= 12) {\n            str += ctr;\n            count++;\n          }\n        }\n      }\n      this.expmonth = str;\n      if (this.expmonth) {\n        this.act_mm = true;\n      } else {\n        this.act_mm = false;\n      }\n    },\n    expyear: function (value) {\n      let arr = value.split(\"\");\n      let str = \"\";\n      let count = 0;\n      for (const ctr of arr) {\n        if (!isNaN(ctr) && count < 2 && ctr != \" \") {\n          str += ctr;\n          count++;\n        }\n      }\n      this.expyear = str;\n      if (this.expyear) {\n        this.act_yy = true;\n      } else {\n        this.act_yy = false;\n      }\n    },\n    tarjeta: function (value) {\n      let arr = value.split(\"\");\n      let str = \"\";\n      let count = 0;\n      for (const ctr of arr) {\n        if (!isNaN(ctr) && count < 16 && ctr != \" \") {\n          str += ctr;\n          count++;\n        }\n      }\n      this.tarjeta = str;\n      this.tarjeta = str;\n      if (this.tarjeta.length > 15) {\n        this.act_num = true;\n        this.err_num = false;\n      } else if (this.tarjeta) {\n        this.err_num = true;\n      } else {\n        this.err_num = false;\n        this.act_num = false;\n      }\n    },\n    name: function () {\n      if (this.name) {\n        this.act_nam = true;\n      } else {\n        this.act_nam = false;\n      }\n    }\n  },\n  computed: {\n    payment() {\n      return this.$store.getters[\"pasarela/getAdded\"];\n    }\n  },\n  methods: {\n    ...mapActions(\"pasarela\", [\"setHistoryOptionPsl\"]),\n    ...mapActions(\"carrito\", [\"setCart\"]),\n    ...mapActions(\"pasarela\", [\"setAddedPsl\"]),\n    delStatus: function () {\n      setTimeout(() => this.delMsgs(), 5000);\n    },\n    delMsgs: function () {\n      this.status = \"\";\n      this.message = \"\";\n    },\n    refre: function () {\n      setTimeout(() => this.$router.go(), 200);\n      this.setHistoryOptionPsl(\"Default\");\n    },\n    createCharge: async function (device, source) {\n      this.setHistoryOptionPsl(\"createCharge\");\n      let infopayment = this.payment;\n      let data = {\n        _ctk: infopayment._ctk,\n        method: infopayment.method,\n        shipping_option: infopayment.shipping_option,\n        id_user: infopayment.id_user,\n        name: infopayment.name,\n        lastname: infopayment.lastname,\n        email: infopayment.email,\n        phone: infopayment.phone,\n        address: infopayment.address,\n        country: infopayment.country,\n        state: infopayment.state,\n        city: infopayment.city,\n        postal_code: infopayment.postal_code,\n        notes: infopayment.notes,\n        facturar: infopayment.facturar,\n        f_postal_code: infopayment.f_postal_code,\n        f_country: infopayment.f_country,\n        f_state: infopayment.f_state,\n        f_city: infopayment.f_city,\n        f_email: infopayment.f_email,\n        f_phone: infopayment.f_phone,\n        reason_social: infopayment.reason_social,\n        fiscal_address: infopayment.fiscal_address,\n        rfc: infopayment.rfc,\n        terminos: infopayment.terminos,\n        email_list: infopayment.email_list,\n        source_id: source,\n        device_session_id: device,\n        carrier: infopayment.carrier\n      };\n      let result = await this.$store.dispatch(\"payment/addItemPym\", {\n        option: \"payment\",\n        item: data\n      });\n\n      //console.log(result)\n\n      if (result.status != \"success\") {\n        this.viewModal = true;\n      } else {\n        //si todo es correcto.\n        this.wait = false;\n        this.setAddedPsl(result.result);\n        //this.setHistoryOptionPsl(\"Finalizando\"); \n        console.log(result.result);\n        let payload = {\n          option: \"set_cart\",\n          item: {\n            id_cliente: null\n          }\n        };\n        localStorage.setItem('voucher', JSON.stringify(result.result));\n        this.setCart(payload);\n        this.$router.push(\"/finalizado\").catch(err => {});\n\n        //const url = result.result.receipt.body.payment_method.url;\n\n        // window.location.href = url;\n      }\n    },\n\n    toThankYou: async function () {\n      return this.$router.push(\"/finalizado\").catch(err => {});\n    },\n    validar(name, tarjeta, expmonth, expyear, cvv) {\n      let srt = \"\";\n      let count = 0;\n      if (name == \"\" || !name) {\n        srt += \" El nombre es requerido.\";\n        count++;\n        this.err_nam = true;\n        this.act_nam = false;\n      }\n      if (tarjeta == \"\" || !tarjeta || tarjeta.length < 16) {\n        srt += \" La tarjeta es requerida.\";\n        count++;\n        this.err_num = true;\n        this.act_num = false;\n      }\n      if (expmonth == \"\" || !expmonth) {\n        srt += \" El mes es requerido.\";\n        count++;\n        this.err_mm = true;\n        this.act_mm = false;\n      }\n      if (expyear == \"\" || !expyear) {\n        srt += \" El aÃ±o es requerido. \";\n        count++;\n        this.err_yy = true;\n        this.act_yy = false;\n      }\n      if (cvv == \"\" || !cvv) {\n        srt += \" El cvv es requerido. \";\n        count++;\n        this.err_cvv = true;\n        this.act_cvv = false;\n      }\n      if (count > 0) {\n        return {\n          status: \"error\",\n          message: srt\n        };\n      } else {\n        return {\n          status: \"success\",\n          message: \"\"\n        };\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAsKA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAH;MACAI;MACAC;MACAC;MACAC;MACAC;MACAC;MAEAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACA;AACA;AACA;EACAC;IACAC;MACA;AACA;AACA;MACAC;MACAA;MACAA;MACA;MACA,+CACA,gBACA,0BACA;MAEAD;QACAE;QACAF;QACAC,mCACA,gBACAE,gBACAC,cACA;MACA;MAEA;QACA;QACAJ;QACA;QACA;QACA;QAEA;UACAK;QACA;UACAC;QACA;;QAEA;QACA;MACA;;MAEA;QACA,WACAC,yCACAA,4BACAA;QACA;QACAD;QACA;QACAN;MACA;IACA;IAEA;MACA;MACA;MACA;IACA;IAEA;MACA;MACA;IACA;IAEA;MACA,oBACA,WACA,cACA,eACA,cACA,SACA;IACA;EACA;EACAQ;IACAtB;MACA;MAEA;MACA;MACA;QACA;UACAuB;UACAC;QACA;MACA;MAEA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEA1B;MACA;MAEA;MACA;MACA;QACA;UACA;UACA2B;UACA;YACAF;YACAC;UACA;QACA;MACA;MAEA;MAEA;QACA;MACA;QACA;MACA;IACA;IAEAzB;MACA;MAEA;MACA;MACA;QACA;UACAwB;UACAC;QACA;MACA;MAEA;MACA;QACA;MACA;QACA;MACA;IACA;IACA3B;MACA;MAEA;MACA;MAEA;QACA;UACA0B;UACAC;QACA;MACA;MAEA;MAEA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;QACA;MACA;IACA;IACA/B;MACA;QACA;MACA;QACA;MACA;IACA;EACA;EACAiC;IACAC;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;IACAC;MACAC;IACA;IACAC;MACA;MACA;IACA;IAEAC;MACAF;MACA;IACA;IACAG;MACA;MACA;MAEA;QACAC;QACAC;QACAC;QACAC;QACA5C;QACA6C;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEA;QACAC;QACAC;MACA;;MAEA;;MAEA;QACA;MACA;QACA;QACA;QACA;QACA;QACAC;QACA;UACAF;UACAC;YAAAE;UAAA;QACA;QACAC;QACA;QACA;;QAEA;;QAEA;MACA;IACA;;IAEAC;MACA;IACA;IACAC;MACA;MACA;MACA;QACAC;QACA7C;QACA;QACA;MACA;MAEA;QACA6C;QACA7C;QACA;QACA;MACA;MAEA;QACA6C;QACA7C;QACA;QACA;MACA;MAEA;QACA6C;QACA7C;QACA;QACA;MACA;MAEA;QACA6C;QACA7C;QACA;QACA;MACA;MAEA;QACA;UACA7B;UACAC;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;EACA;AACA","names":["name","data","status","message","tarjeta","expmonth","expyear","cvv","wait","viewModal","err_cvv","err_mm","err_yy","err_num","err_nam","act_cvv","act_mm","act_yy","act_num","act_nam","mounted","$","OpenPay","event","sucess_callbak","error_callbak","charge","showMessage","response","watch","str","count","newstr","computed","payment","methods","delStatus","setTimeout","delMsgs","refre","createCharge","_ctk","method","shipping_option","id_user","lastname","email","phone","address","country","state","city","postal_code","notes","facturar","f_postal_code","f_country","f_state","f_city","f_email","f_phone","reason_social","fiscal_address","rfc","terminos","email_list","source_id","device_session_id","carrier","option","item","console","id_cliente","localStorage","toThankYou","validar","srt"],"sourceRoot":"src/components/pasarelas","sources":["openpay.vue"],"sourcesContent":["<template>\r\n  <div id=\"checkout_view\">\r\n    <div v-if=\"!viewModal\">\r\n      <form id=\"payment-form\">\r\n        <input type=\"hidden\" name=\"token_id\" id=\"token_id\" />\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"use_card_points\"\r\n          id=\"use_card_points\"\r\n          value=\"false\"\r\n        />\r\n        <div class=\"pymnt-itm card active\">\r\n          <div class=\"pymnt-cntnt\">\r\n            <p class=\"title-op\">MÃ©todo de Pago</p>\r\n            <div class=\"card-expl dflx\">\r\n              <div class=\"box-card credit\">\r\n                <h4>Tarjetas de <span>crÃ©dito</span></h4>\r\n                <img\r\n                  src=\"../../assets/TDC.svg\"\r\n                  alt=\"Iconos tarjetas de crÃ©dito aceptadas.\"\r\n                />\r\n              </div>\r\n              <div class=\"box-card debit\">\r\n                <h4>Tarjetas de <span> dÃ©bito</span></h4>\r\n                <img\r\n                  src=\"../../assets/TDD.svg\"\r\n                  alt=\"Iconos tarjetas de dÃ©bito aceptadas.\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"sctn-row\">\r\n              <div class=\"sctn-col grp1 l\">\r\n                <label>Nombre del titular</label\r\n                ><input\r\n                  v-model=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Como aparece en la tarjeta\"\r\n                  autocomplete=\"off\"\r\n                  data-openpay-card=\"holder_name\"\r\n                />\r\n              </div>\r\n              <div class=\"sctn-col grp1\">\r\n                <label>NÃºmero de tarjeta</label\r\n                ><input\r\n                  v-model=\"tarjeta\"\r\n                  type=\"text\"\r\n                  autocomplete=\"off\"\r\n                  data-openpay-card=\"card_number\"\r\n                  placeholder=\"4242424242424242\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"sctn-row dflx\">\r\n              <div class=\"sctn-col grp2 l\">\r\n                <label>Fecha de expiraciÃ³n</label>\r\n                <div\r\n                  class=\"expc dflx\"\r\n                  :class=\"{\r\n                    err_inp: this.err_mm || this.err_yy,\r\n                    act_inp:\r\n                      (this.act_mm == true || this.act_yy == true) &&\r\n                      this.err_mm == false &&\r\n                      this.err_yy == false,\r\n                  }\"\r\n                >\r\n                  <div class=\"sctn-col half l\">\r\n                    <input\r\n                      v-model=\"expmonth\"\r\n                      class=\"inp1\"\r\n                      :class=\"{\r\n                        err_inp: this.err_mm || this.err_yy,\r\n                        act_inp:\r\n                          (this.act_mm == true || this.act_yy == true) &&\r\n                          this.err_mm == false &&\r\n                          this.err_yy == false,\r\n                      }\"\r\n                      type=\"text\"\r\n                      placeholder=\"MM\"\r\n                      data-openpay-card=\"expiration_month\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"sctn-col half l\">\r\n                    <input\r\n                      v-model=\"expyear\"\r\n                      :class=\"{\r\n                        err_inp: this.err_mm || this.err_yy,\r\n                        act_inp:\r\n                          (this.act_mm == true || this.act_yy == true) &&\r\n                          this.err_mm == false &&\r\n                          this.err_yy == false,\r\n                      }\"\r\n                      class=\"inp2\"\r\n                      type=\"text\"\r\n                      placeholder=\"YY\"\r\n                      data-openpay-card=\"expiration_year\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"sctn-col grp3 cvv\">\r\n                <label>CVV</label>\r\n                <div class=\"sctn-col half l\">\r\n                  <input\r\n                    v-model=\"cvv\"\r\n                    type=\"text\"\r\n                    :class=\"{\r\n                      err_inp: this.err_cvv,\r\n                      act_inp: this.act_cvv == true && this.err_cvv == false,\r\n                    }\"\r\n                    autocomplete=\"off\"\r\n                    data-openpay-card=\"cvv2\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"openpay\">\r\n              <div class=\"logo dflx\">\r\n                <p>Transacciones realizadas vÃ­a:</p>\r\n                <img src=\"../../assets/openpaylogo.svg\" alt=\"Icono openpay\" />\r\n              </div>\r\n              <div class=\"shield dflx\">\r\n                <img src=\"../../assets/security.svg\" alt=\"Icono escudo.\" />\r\n                <p>\r\n                  Tus pagos se realizan de forma segura con encriptaciÃ³n de 256\r\n                  bits\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"sctn-row btncp\">\r\n              <a\r\n                v-if=\"wait == false\"\r\n                class=\"button rght\"\r\n                id=\"pay-button\"\r\n                @click=\"validar(name, tarjeta, expmonth, expyear, cvv)\"\r\n                >Pagar</a\r\n              >\r\n              <p class=\"button rght\"  v-if=\"wait\" id=\"pay-button2\">\r\n                <img src=\"../../assets/Cargando0.gif\" alt=\"cargando gif\" />\r\n              </p>\r\n            </div>\r\n\r\n            <p id=\"error_msg\" v-if=\"status == 'error'\">\r\n              {{ message }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div v-else class=\"view-error\">\r\n      <div class=\"ve-cnt\">\r\n        <!--    <img class=\"\" src=\"\" alt=\"icono app\"> icono app -->\r\n        <div class=\"ve-body\">\r\n          <!--    <img src=\"\">  icono triste -->\r\n          <p>\r\n            LO SENTIMOS HA OCURRIDO UN ERROR AL INTENTAR REALIZAR TU PAGO,\r\n            INTENTALO DE NUEVO.\r\n          </p>\r\n        </div>\r\n        <a v-on:click=\"refre()\"\r\n          ><p class=\"\"><span>Aceptar</span></p></a\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"checkout\",\r\n  data() {\r\n    return {\r\n      status: \"\",\r\n      message: \"\",\r\n      name: \"\",\r\n      tarjeta: \"\",\r\n      expmonth: \"\",\r\n      expyear: \"\",\r\n      cvv: \"\",\r\n      wait: false,\r\n      viewModal: false,\r\n\r\n      err_cvv: false,\r\n      err_mm: false,\r\n      err_yy: false,\r\n      err_num: false,\r\n      err_nam: false,\r\n      act_cvv: false,\r\n      act_mm: false,\r\n      act_yy: false,\r\n      act_num: false,\r\n      act_nam: false,\r\n    };\r\n  },\r\n  /*\r\n     4242424242424242\r\n    */\r\n  mounted() {\r\n    $(document).ready(function () {\r\n      /* OpenPay.setId('m0k8wleehyy9vgb1p4ie');\r\n            OpenPay.setApiKey('pk_50ce9f4f4be54881864d9a78eb925d48');\r\n            OpenPay.setSandboxMode(false);*/\r\n      OpenPay.setId(\"m8ckqeb3piuvny68ca2o\");\r\n      OpenPay.setApiKey(\"pk_44853576427b46cdb5d45336669555ce\");\r\n      OpenPay.setSandboxMode(true);\r\n      //Se genera el id de dispositivo\r\n      var deviceSessionId = OpenPay.deviceData.setup(\r\n        \"payment-form\",\r\n        \"deviceIdHiddenFieldName\"\r\n      );\r\n\r\n      $(\"#pay-button\").on(\"click\", function (event) {\r\n        event.preventDefault();\r\n        $(\"#pay-button\").prop(\"disabled\", true);\r\n        OpenPay.token.extractFormAndCreate(\r\n          \"payment-form\",\r\n          sucess_callbak,\r\n          error_callbak\r\n        );\r\n      });\r\n\r\n      var sucess_callbak = function (response) {\r\n        var token_id = response.data.id;\r\n        $(\"#token_id\").val(token_id);\r\n        // $('#payment-form').submit();\r\n        //ENVIAR a otra pagina.\r\n        let isval = execute();\r\n\r\n        if (isval.status == \"success\") {\r\n          charge(deviceSessionId, token_id);\r\n        } else {\r\n          showMessage(isval.message);\r\n        }\r\n\r\n        //console.log(token_id)\r\n        //console.log(deviceSessionId)\r\n      };\r\n\r\n      var error_callbak = function (response) {\r\n        var desc =\r\n          response.data.description != undefined\r\n            ? response.data.description\r\n            : response.message;\r\n        let message = desc; //\"ERROR [\" + response.status + \"] : \" +\r\n        showMessage(message);\r\n        //console.log(message)\r\n        $(\"#pay-button\").prop(\"disabled\", false);\r\n      };\r\n    });\r\n\r\n    let showMessage = (error) => {\r\n      this.status = \"error\";\r\n      this.message = error;\r\n      this.delStatus();\r\n    };\r\n\r\n    let charge = (deviceSessionId, token_id) => {\r\n      this.wait = true;\r\n      this.createCharge(deviceSessionId, token_id);\r\n    };\r\n\r\n    let execute = () => {\r\n      return this.validar(\r\n        this.name,\r\n        this.tarjeta,\r\n        this.expmonth,\r\n        this.expyear,\r\n        this.cvv\r\n      );\r\n    };\r\n  },\r\n  watch: {\r\n    cvv: function (value) {\r\n      let arr = value.split(\"\");\r\n\r\n      let str = \"\";\r\n      let count = 0;\r\n      for (const ctr of arr) {\r\n        if (!isNaN(ctr) && count < 4 && ctr != \" \") {\r\n          str += ctr;\r\n          count++;\r\n        }\r\n      }\r\n\r\n      this.cvv = str;\r\n      if (this.cvv.length > 2) {\r\n        this.act_cvv = true;\r\n        this.err_cvv = false;\r\n      } else if (this.cvv) {\r\n        this.err_cvv = true;\r\n      } else {\r\n        this.err_cvv = false;\r\n        this.act_cvv = false;\r\n      }\r\n    },\r\n\r\n    expmonth: function (value) {\r\n      let arr = value.split(\"\");\r\n\r\n      let str = \"\";\r\n      let count = 0;\r\n      for (const ctr of arr) {\r\n        if (!isNaN(ctr) && count < 2 && ctr != \" \") {\r\n          let newstr = str + ctr;\r\n          newstr = parseInt(newstr);\r\n          if (newstr <= 12) {\r\n            str += ctr;\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.expmonth = str;\r\n\r\n      if (this.expmonth) {\r\n        this.act_mm = true;\r\n      } else {\r\n        this.act_mm = false;\r\n      }\r\n    },\r\n\r\n    expyear: function (value) {\r\n      let arr = value.split(\"\");\r\n\r\n      let str = \"\";\r\n      let count = 0;\r\n      for (const ctr of arr) {\r\n        if (!isNaN(ctr) && count < 2 && ctr != \" \") {\r\n          str += ctr;\r\n          count++;\r\n        }\r\n      }\r\n\r\n      this.expyear = str;\r\n      if (this.expyear) {\r\n        this.act_yy = true;\r\n      } else {\r\n        this.act_yy = false;\r\n      }\r\n    },\r\n    tarjeta: function (value) {\r\n      let arr = value.split(\"\");\r\n\r\n      let str = \"\";\r\n      let count = 0;\r\n\r\n      for (const ctr of arr) {\r\n        if (!isNaN(ctr) && count < 16 && ctr != \" \") {\r\n          str += ctr;\r\n          count++;\r\n        }\r\n      }\r\n\r\n      this.tarjeta = str;\r\n\r\n      this.tarjeta = str;\r\n      if (this.tarjeta.length > 15) {\r\n        this.act_num = true;\r\n        this.err_num = false;\r\n      } else if (this.tarjeta) {\r\n        this.err_num = true;\r\n      } else {\r\n        this.err_num = false;\r\n        this.act_num = false;\r\n      }\r\n    },\r\n    name: function () {\r\n      if (this.name) {\r\n        this.act_nam = true;\r\n      } else {\r\n        this.act_nam = false;\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    payment() {\r\n      return this.$store.getters[\"pasarela/getAdded\"];\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(\"pasarela\", [\"setHistoryOptionPsl\"]),\r\n    ...mapActions(\"carrito\", [\"setCart\"]),\r\n    ...mapActions(\"pasarela\", [\"setAddedPsl\"]),\r\n    delStatus: function () {\r\n      setTimeout(() => this.delMsgs(), 5000);\r\n    },\r\n    delMsgs: function () {\r\n      this.status = \"\";\r\n      this.message = \"\";\r\n    },\r\n\r\n    refre: function () {\r\n      setTimeout(() => this.$router.go(), 200);\r\n      this.setHistoryOptionPsl(\"Default\");\r\n    },\r\n    createCharge: async function (device, source) {\r\n      this.setHistoryOptionPsl(\"createCharge\");\r\n      let infopayment = this.payment;\r\n\r\n      let data = {\r\n        _ctk: infopayment._ctk,\r\n        method: infopayment.method,\r\n        shipping_option: infopayment.shipping_option,\r\n        id_user: infopayment.id_user,\r\n        name: infopayment.name,\r\n        lastname: infopayment.lastname,\r\n        email: infopayment.email,\r\n        phone: infopayment.phone,\r\n        address: infopayment.address,\r\n        country: infopayment.country,\r\n        state: infopayment.state,\r\n        city: infopayment.city,\r\n        postal_code: infopayment.postal_code,\r\n        notes: infopayment.notes,\r\n        facturar: infopayment.facturar,\r\n        f_postal_code: infopayment.f_postal_code,\r\n        f_country: infopayment.f_country,\r\n        f_state: infopayment.f_state,\r\n        f_city: infopayment.f_city,\r\n        f_email: infopayment.f_email,\r\n        f_phone: infopayment.f_phone,\r\n        reason_social: infopayment.reason_social,\r\n        fiscal_address: infopayment.fiscal_address,\r\n        rfc: infopayment.rfc,\r\n        terminos: infopayment.terminos,\r\n        email_list: infopayment.email_list,\r\n        source_id: source,\r\n        device_session_id: device,\r\n        carrier: infopayment.carrier,\r\n      };\r\n\r\n      let result = await this.$store.dispatch(\"payment/addItemPym\", {\r\n        option: \"payment\",\r\n        item: data,\r\n      });\r\n\r\n      //console.log(result)\r\n\r\n      if (result.status != \"success\") {\r\n        this.viewModal = true;\r\n      } else {\r\n        //si todo es correcto.\r\n        this.wait = false;\r\n        this.setAddedPsl(result.result);\r\n        //this.setHistoryOptionPsl(\"Finalizando\"); \r\n        console.log(result.result)\r\n        let payload = {\r\n          option: \"set_cart\",\r\n          item: { id_cliente: null },\r\n        };\r\n        localStorage.setItem('voucher', JSON.stringify(result.result))\r\n        this.setCart(payload);\r\n        this.$router.push(\"/finalizado\").catch(err => {});\r\n\r\n        //const url = result.result.receipt.body.payment_method.url;\r\n\r\n       // window.location.href = url;\r\n      }\r\n    },\r\n\r\n    toThankYou: async function () {\r\n      return this.$router.push(\"/finalizado\").catch((err) => {});\r\n    },\r\n    validar(name, tarjeta, expmonth, expyear, cvv) {\r\n      let srt = \"\";\r\n      let count = 0;\r\n      if (name == \"\" || !name) {\r\n        srt += \" El nombre es requerido.\";\r\n        count++;\r\n        this.err_nam = true;\r\n        this.act_nam = false;\r\n      }\r\n\r\n      if (tarjeta == \"\" || !tarjeta || tarjeta.length < 16) {\r\n        srt += \" La tarjeta es requerida.\";\r\n        count++;\r\n        this.err_num = true;\r\n        this.act_num = false;\r\n      }\r\n\r\n      if (expmonth == \"\" || !expmonth) {\r\n        srt += \" El mes es requerido.\";\r\n        count++;\r\n        this.err_mm = true;\r\n        this.act_mm = false;\r\n      }\r\n\r\n      if (expyear == \"\" || !expyear) {\r\n        srt += \" El aÃ±o es requerido. \";\r\n        count++;\r\n        this.err_yy = true;\r\n        this.act_yy = false;\r\n      }\r\n\r\n      if (cvv == \"\" || !cvv) {\r\n        srt += \" El cvv es requerido. \";\r\n        count++;\r\n        this.err_cvv = true;\r\n        this.act_cvv = false;\r\n      }\r\n\r\n      if (count > 0) {\r\n        return {\r\n          status: \"error\",\r\n          message: srt,\r\n        };\r\n      } else {\r\n        return {\r\n          status: \"success\",\r\n          message: \"\",\r\n        };\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n#checkout_view {\r\n  padding-top: 3.385vw;\r\n  width: 100%;\r\n  margin: auto;\r\n  /*margin-top: 5.384615384615385VW;*/\r\n}\r\np.title-op {\r\n  font-family: var(--Inter);\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  color: #828282;\r\n}\r\n.box-card:first-child {\r\n  width: 48%;\r\n  border-right: 0.5px solid #bebebe;\r\n}\r\n.box-card {\r\n  margin-bottom: 3.358974vw;\r\n}\r\n\r\n.card-expl h4 {\r\n  font-family: var(--Inter);\r\n  font-size: 0.729vw;\r\n  color: gray;\r\n  font-weight: 500;\r\n  margin: 0vw;\r\n  margin-bottom: 0.582051vw;\r\n}\r\n.card-expl h4 span {\r\n  font-weight: 700;\r\n}\r\n\r\n.grp1 {\r\n  margin-bottom: 0.530769vw;\r\n}\r\n.grp1 label {\r\n  display: grid;\r\n}\r\n\r\n#payment-form label {\r\n  font-size: 0.729vw;\r\n  color: gray;\r\n  font-weight: 700;\r\n  font-family: var(--Inter);\r\n  margin-bottom: 0.51282vw;\r\n  padding-left: 0;\r\n}\r\n\r\n.grp1 input {\r\n  width: 17.917vw;\r\n  height: 1.719vw;\r\n  font-family: var(--Inter);\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 0.625vw;\r\n  line-height: 0.781vw;\r\n  background-color: var(--bk-inputOPay);\r\n  color: var(--co-txtOPay);\r\n  border: 1px solid transparent;\r\n  margin-bottom: 0.469vw;\r\n  border-radius: 12vw;\r\n}\r\n#payment-form input::placeholder {\r\n  color: var(--co-txtOPay);\r\n  font-style: italic;\r\n  font-family: var(--Inter);\r\n  font-size: 0.625vw;\r\n  font-weight: 400;\r\n}\r\n\r\n.grp2 {\r\n  /* width: 57%; */\r\n}\r\n\r\n.grp3 {\r\n  margin-left: 1.2999999999999994vw;\r\n}\r\n\r\n.grp2 input {\r\n  width: 17.917vw;\r\n  height: 1.719vw;\r\n  font-family: var(--Inter);\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 0.625vw;\r\n  line-height: 0.781vw;\r\n  background-color: var(--bk-inputOPay);\r\n  color: var(--co-txtOPay);\r\n  border: 1px solid transparent;\r\n  margin-bottom: 0;\r\n  border-radius: 12vw;\r\n}\r\n\r\n.grp3 input {\r\n  width: 5.7vw;\r\n  height: 1.719vw;\r\n  font-family: var(--Inter);\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 0.625vw;\r\n  line-height: 0.781vw;\r\n  background-color: var(--bk-inputOPay);\r\n  color: var(--color-2);\r\n  border: 1px solid transparent;\r\n  margin-bottom: 0.469vw;\r\n  border-radius: 12vw;\r\n}\r\n\r\ninput.inp1 {\r\n  width: 4.5vw;\r\n  margin-right: 0.5vw;\r\n}\r\ninput.inp2 {\r\n  width: 4.5vw;\r\n}\r\n\r\n.openpay {\r\n  width: 100%;\r\n  border-bottom: 0.5px solid #bebebe;\r\n  border-top: 0.5px solid #bebebe;\r\n  margin-top: 1.351282vw;\r\n  margin-bottom: 2.351282vw;\r\n  padding-top: 0.58974vw;\r\n  padding-bottom: 0.58974vw;\r\n}\r\n\r\n.logo p {\r\n  font-size: 0.7vw;\r\n  margin-top: 1vw;\r\n  width: 11vw;\r\n  color: rgba(134, 134, 134, 1);\r\n  font-weight: 600;\r\n}\r\n\r\n.logo img {\r\n  width: 7.717949vw;\r\n  height: 3.205128vw;\r\n  margin-left: 0vw;\r\n  padding-top: 0vw;\r\n}\r\n\r\n.shield p {\r\n  color: rgba(134, 134, 134, 1);\r\n  font-size: 0.729vw;\r\n  margin-left: 0.5vw;\r\n  width: 16vw;\r\n  margin-top: 0vw;\r\n}\r\n\r\n.shield img {\r\n  width: 1.948718vw;\r\n  height: 1.487179vw;\r\n  padding-top: 0.3vw;\r\n}\r\n\r\n.expc {\r\n    background-color: var(--bk-inputOPay);\r\n    color: var(--co-txtOPay);\r\n    border-radius: 10vw;\r\n}\r\n\r\na#pay-button {\r\n  background: var(--color-1);\r\n  color: rgba(255, 255, 255, 1);\r\n  cursor: pointer;\r\n\r\n  font-family: var(--Inter);\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 0.833vw;\r\n  line-height: 0.833vw;\r\n  color: #ffffff;\r\n\r\n  padding: 1.5vw 7.82vw;\r\n\r\n  text-align: center;\r\n  border-radius: 10vw;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    display: flex;\r\n    width: fit-content;\r\n}\r\n\r\np#pay-button2 {\r\n  background: var(--color-1);\r\n  color: rgba(255, 255, 255, 1);\r\n  font-size: 2.076923076923077vw;\r\n  font-weight: 800;\r\n  /* padding: 1vw 1vw; */\r\n  /* margin-left: 25%; */\r\n  text-align: center;\r\n  padding: 0vw;\r\n  margin: 0vw auto;\r\n    border-radius: 10vw;\r\n    width: 6vw;\r\n}\r\np#pay-button2 img {\r\n  width: 5vw;\r\n  height: 1.5vw;\r\n  padding-top: 0vw;\r\n}\r\n\r\n.box-card img {\r\n  width: 6.974359vw;\r\n  height: 3.076923vw;\r\n  padding-left: 0;\r\n}\r\n\r\n#error_msg {\r\n  background: var(--color-7);\r\n  color: rgba(255, 255, 255, 1);\r\n  font-size: 0.76923vw;\r\n  padding: 0.5vw;\r\n  text-align: center;\r\n  width: 90.4%;\r\n  margin-top: 1.5vw;\r\n}\r\n\r\n/** modal error */\r\n.ModalOut {\r\n  width: 67.6923076923077vw;\r\n  height: 97.94871794871794vw;\r\n  background-color: #ffffff;\r\n  border-radius: 7.6923076923076925vw;\r\n  position: absolute !important;\r\n  /*margin-left: 16vw;\r\n    margin-top: 59vw;*/\r\n}\r\n.MContent2 {\r\n  width: 51.7948717948718vw;\r\n  height: 40.897436vw;\r\n  border: 0.6vw solid #f54c49;\r\n  border-radius: 7.6923076923076925vw;\r\n  text-align: center;\r\n  margin-left: 7vw;\r\n}\r\n.MContent2 img {\r\n  width: 11.025641025641026vw;\r\n  height: 11.025641025641026vw;\r\n  margin-top: 4.615384615384616vw;\r\n}\r\n.MContent2 p {\r\n  width: 41vw;\r\n  margin-inline: auto;\r\n  font-size: 3.076923076923077vw;\r\n  color: #215675;\r\n  line-height: 3.6923076923076925vw;\r\n  font-weight: 600;\r\n}\r\np.GH {\r\n  font-size: 3.5897435897435894vw;\r\n  color: #215675;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  margin-top: 8.461538461538462vw;\r\n}\r\n.GH span {\r\n  font-weight: 800;\r\n}\r\n  .view-error p {\r\n    font-size: .9vw; \r\n}\r\n.view-error a p {\r\n    padding: 1.5vw 7.82vw;\r\n    background: var(--color-1);\r\n    color: #ffffff;\r\n    font-weight: 700;\r\n    border-radius: 15vw;\r\n    width: fit-content;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n@media (min-width: 768px) {\r\n  .box-card:first-child{\r\n    margin-right: 1.927vw;\r\n    padding-right: 1.927vw;\r\n  }\r\n}\r\n@media (max-width: 768px) {\r\n.view-error p { \r\n  font-size: 3.076923076923077vw;\r\n    color: #8e8e8e;\r\n    font-family: 'Inter';\r\n}\r\n.view-error a p {\r\n    padding: 5.556vw 25.604vw;\r\n}\r\n.box-card:last-child {\r\n  padding-left: 8.937vw;\r\n}\r\n\r\n  .card-expl h4 {\r\n    /*padding-left: 2vw;*/\r\n    font-size: 3.6vw;\r\n\r\n    margin: 0vw;\r\n    margin-bottom: 0.582051vw;\r\n  }\r\n  .box-card {\r\n    margin-bottom: 9.42vw;\r\n  }\r\n  .box-card.credit {\r\n    padding-right: 8.937vw;\r\n  }\r\n  .grp1:nth-child(2) {\r\n    padding-top: 5vw;\r\n  }\r\n  .sctn-row {\r\n    padding-top: 5vw;\r\n  }\r\n\r\n  .box-card img {\r\n    width: 27.295vw;\r\n    height: 18.076923vw;\r\n    /* padding-left: 0.5vw; */\r\n  }\r\n\r\n  #payment-form label {\r\n    font-size: 4vw;\r\n    margin-bottom: 1.208vw;\r\n  }\r\n\r\n  .grp1 input {\r\n    width: 100%;\r\n    height: 9.719vw;\r\n    text-indent: 3vw;\r\n    font-size: 3.625vw;\r\n  }\r\n\r\n  #payment-form input::placeholder {\r\n    font-size: 3.625vw;\r\n  }\r\n\r\n  input.inp1 {\r\n    width: 18.5vw;\r\n    margin-right: 0.5vw;\r\n  }\r\n  input.inp2 {\r\n    width: 18.5vw;\r\n  }\r\n\r\n  .grp2 input,\r\n  .grp3 input {\r\n    height: 9.719vw;\r\n    font-size: 3.625vw;\r\n    text-indent: 2vw;\r\n  }\r\n\r\n  .grp3 input {\r\n    width: 27.7vw;\r\n  }\r\n\r\n  .openpay {\r\n    width: 100%;\r\n    border-bottom: 0.5px solid #bebebe;\r\n    border-top: 0.5px solid #bebebe;\r\n    margin-top: 7.351282vw;\r\n    margin-bottom: 11.351282vw;\r\n    padding-top: 1.58974vw;\r\n    padding-bottom: 1.58974vw;\r\n  }\r\n\r\n  .logo p[data-v-f0fbe0ca] {\r\n    font-size: 3vw;\r\n    color: rgba(134, 134, 134, 1);\r\n    font-weight: 600;\r\n    margin-top: 2vw;\r\n    width: 47vw;\r\n  }\r\n\r\n  .logo img {\r\n    width: 20.717949vw;\r\n    height: 9.205128vw;\r\n    margin-left: 3vw;\r\n    padding-top: 0vw;\r\n  }\r\n\r\n  .shield p {\r\n    color: rgba(134, 134, 134, 1);\r\n    font-size: 2.7vw;\r\n    margin-left: 0.5vw;\r\n    width: 90%;\r\n    margin-top: 0vw;\r\n  }\r\n\r\n  .shield img {\r\n    width: 9.948718vw;\r\n    height: 9.487179vw;\r\n    padding-top: 0vw;\r\n  }\r\n\r\n  p.title-op {\r\n    font-size: 3.865vw;\r\n    line-height: 4.589vw;\r\n  }\r\n  a#pay-button {\r\n    font-size: 3.833vw;\r\n    padding: 5.556vw 25.604vw;\r\n  }\r\n\r\n  p#pay-button2 {\r\n    /*padding: 5.5vw 28.3vw;  */\r\n    padding: 0;\r\n    width: 21vw;\r\n    font-size: 8vw;\r\n  }\r\n  p#pay-button2 img {\r\n    width: 18vw;\r\n    padding-top: 0vw;\r\n    height: 5vw;\r\n  }\r\n\r\n  #error_msg {\r\n    font-size: 2.76923vw;\r\n    padding: 0.5vw;\r\n\r\n    width: 99%;\r\n    margin-top: 6.5vw;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}