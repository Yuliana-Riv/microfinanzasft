{"ast":null,"code":"import axios from \"axios\";\nimport dayjs from 'dayjs';\nimport { url, endpointCodes } from '../global/index';\nvar userToken = \"\";\nexport default {\n  setToken(token) {\n    localStorage.setItem(\"tkn\", token);\n  },\n  getToken() {\n    let token = localStorage.getItem(\"tkn\");\n    if (token && token != \"undefined\" && token != '') {\n      userToken = token;\n    } else {\n      userToken = null;\n    }\n    return userToken;\n  },\n  isAdmin(user) {\n    let admin = false;\n    let type = 'user';\n    if (user == undefined || user == null || user == '') {\n      return {\n        \"admin\": admin,\n        \"type\": type\n      };\n    }\n    if (user.role == undefined || user.role == null || user.role == '') {\n      return {\n        \"admin\": admin,\n        \"type\": type\n      };\n    }\n    if (user.role != 'admin' && user.role != 'legrafica') {\n      return {\n        \"admin\": admin,\n        \"type\": type\n      };\n    }\n\n    //si es admin.\n    admin = true;\n    type = user.role;\n    return {\n      \"admin\": admin,\n      \"type\": type\n    };\n  },\n  isRes(user) {\n    let res = false;\n    let type = 'user';\n    if (user == undefined || user == null || user == '') {\n      return {\n        \"res\": res,\n        \"type\": type\n      };\n    }\n    if (user.role == undefined || user.role == null || user.role == '') {\n      return {\n        \"res\": res,\n        \"type\": type\n      };\n    }\n    if (user.role != 'restaurante') {\n      return {\n        \"res\": res,\n        \"type\": type\n      };\n    }\n\n    //si es res.\n    res = true;\n    type = user.role;\n    return {\n      \"res\": res,\n      \"type\": type\n    };\n  },\n  isEmp(user) {\n    let emp = false;\n    let type = 'user';\n    if (user == undefined || user == null || user == '') {\n      return {\n        \"emp\": emp,\n        \"type\": type\n      };\n    }\n    if (user.role == undefined || user.role == null || user.role == '') {\n      return {\n        \"emp\": emp,\n        \"type\": type\n      };\n    }\n    if (user.role != 'empleado') {\n      return {\n        \"emp\": emp,\n        \"type\": type\n      };\n    }\n\n    //si es emp.\n    emp = true;\n    type = user.role;\n    return {\n      \"emp\": emp,\n      \"type\": type\n    };\n  },\n  isCli(user) {\n    let cli = false;\n    let type = 'user';\n    if (user == undefined || user == null || user == '') {\n      return {\n        \"cli\": cli,\n        \"type\": type\n      };\n    }\n    if (user.role == undefined || user.role == null || user.role == '') {\n      return {\n        \"cli\": cli,\n        \"type\": type\n      };\n    }\n    if (user.role != 'cliente') {\n      return {\n        \"cli\": cli,\n        \"type\": type\n      };\n    }\n\n    //si es cli.\n    cli = true;\n    type = user.role;\n    return {\n      \"cli\": cli,\n      \"type\": type\n    };\n  },\n  async tokenexp() {\n    let exp = false;\n    let response = await this.getData();\n    if (response.status == 'error') {\n      return true;\n    }\n    let identity = response.result;\n    let identity_exp = identity.exp; // fecha de expiración\n    let date = dayjs().format(); // fecha actual\n    date < identity_exp ? exp : exp = true;\n    return exp;\n  },\n  async getData() {\n    try {\n      let token = this.getToken();\n      if (token == null) {\n        return {\n          status: 'error',\n          message: 'Sesión no valida',\n          result: ''\n        };\n      }\n      let headers = {\n        'Authorization': token\n      };\n      let response = await axios.post(`/${endpointCodes.post}/info_usr`, {\n        \"data\": token\n      }, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      return {\n        status: 'error',\n        message: 'Error al intentar obtener la sesión.',\n        result: ''\n      };\n    }\n  },\n  async createAuth() {\n    try {\n      let token = this.getToken();\n      if (token == null) {\n        return {\n          status: 'error',\n          message: 'Sesión no valida',\n          result: ''\n        };\n      }\n      let headers = {\n        'Authorization': token\n      };\n      let response = await axios.post(`/${endpointCodes.post}/create-auth`, {\n        \"data\": token\n      }, {\n        headers\n      });\n      return {\n        status: 'success',\n        result: response.data.result\n      };\n    } catch (error) {\n      return {\n        status: 'error',\n        result: ''\n      };\n    }\n  },\n  setAth(ath) {\n    localStorage.setItem(\"ath\", ath);\n  },\n  async getAth() {\n    let ath = localStorage.getItem(\"ath\");\n    let valid = false;\n    if (ath && ath != \"undefined\") {\n      try {\n        let token = this.getToken();\n        if (token == null) {\n          return {\n            status: 'error',\n            message: 'Sesión no valida',\n            result: ''\n          };\n        }\n        let headers = {\n          'Authorization': token\n        };\n        let response = await axios.post(`/${endpointCodes.post}/get-auth`, {\n          \"token\": ath\n        }, {\n          headers\n        });\n        response.data.status == 'success' ? valid = true : valid = false;\n      } catch (error) {\n        valid = false;\n      }\n    } else {\n      valid = false;\n    }\n    return valid;\n  },\n  validateIMG: async function (option, img) {\n    let response = true;\n    if (!img) return false;\n    try {\n      const urlback = url + '/' + endpointCodes.get + '/' + option + '/' + img;\n      response = await axios.get(urlback);\n      response.data.message ? response = false : response = true;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n    return response;\n  }\n};","map":{"version":3,"names":["axios","dayjs","url","endpointCodes","userToken","setToken","token","localStorage","setItem","getToken","getItem","isAdmin","user","admin","type","undefined","role","isRes","res","isEmp","emp","isCli","cli","tokenexp","exp","response","getData","status","identity","result","identity_exp","date","format","message","headers","post","data","error","createAuth","setAth","ath","getAth","valid","validateIMG","option","img","urlback","get","err","console","log"],"sources":["C:/Users/Dell Latitude/Documents/GitHub/microfinanzas_ft/src/services/user.service.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport dayjs from 'dayjs';\r\n\r\nimport {url,endpointCodes} from '../global/index'; \r\n\r\nvar userToken=\"\";\r\nexport default {\r\n  \r\n  \r\n  setToken(token) {\r\n    localStorage.setItem(\"tkn\", token);\r\n  },\r\n\r\n  getToken() {\r\n    let token = localStorage.getItem(\"tkn\");\r\n\r\n    if (token && token != \"undefined\" && token != '') {\r\n      userToken = token;\r\n    } else {\r\n      userToken = null;\r\n    }\r\n\r\n    return userToken;\r\n  },\r\n\r\n\r\n  isAdmin(user){\r\n    let admin = false;\r\n    let type = 'user'\r\n\r\n    if(user == undefined || user == null || user == ''){\r\n      return {\"admin\":admin, \"type\":type}\r\n    }\r\n\r\n    if(user.role == undefined || user.role == null || user.role ==''){\r\n      return {\"admin\":admin, \"type\":type}\r\n    }\r\n\r\n    if(user.role != 'admin' && user.role != 'legrafica' ){\r\n      return {\"admin\":admin, \"type\":type}\r\n    }\r\n\r\n    //si es admin.\r\n    admin = true\r\n    type = user.role\r\n\r\n     return {\"admin\":admin, \"type\":type}\r\n\r\n\r\n  },\r\n\r\n  isRes(user){\r\n    let res = false;\r\n    let type = 'user'\r\n\r\n    if(user == undefined || user == null || user == ''){\r\n      return {\"res\":res, \"type\":type}\r\n    }\r\n\r\n    if(user.role == undefined || user.role == null || user.role ==''){\r\n      return {\"res\":res, \"type\":type}\r\n    }\r\n\r\n    if(user.role != 'restaurante' ){\r\n      return {\"res\":res, \"type\":type}\r\n    }\r\n\r\n    //si es res.\r\n    res = true\r\n    type = user.role\r\n\r\n     return {\"res\":res, \"type\":type}\r\n\r\n\r\n  },\r\n\r\n  isEmp(user){\r\n    let emp = false;\r\n    let type = 'user'\r\n\r\n    if(user == undefined || user == null || user == ''){\r\n      return {\"emp\":emp, \"type\":type}\r\n    }\r\n\r\n    if(user.role == undefined || user.role == null || user.role ==''){\r\n      return {\"emp\":emp, \"type\":type}\r\n    }\r\n\r\n    if(user.role != 'empleado' ){\r\n      return {\"emp\":emp, \"type\":type}\r\n    }\r\n\r\n    //si es emp.\r\n    emp = true\r\n    type = user.role\r\n\r\n     return {\"emp\":emp, \"type\":type}\r\n\r\n\r\n  },\r\n\r\n  isCli(user){\r\n    let cli = false;\r\n    let type = 'user'\r\n\r\n    if(user == undefined || user == null || user == ''){\r\n      return {\"cli\":cli, \"type\":type}\r\n    }\r\n\r\n    if(user.role == undefined || user.role == null || user.role ==''){\r\n      return {\"cli\":cli, \"type\":type}\r\n    }\r\n\r\n    if(user.role != 'cliente' ){\r\n      return {\"cli\":cli, \"type\":type}\r\n    }\r\n\r\n    //si es cli.\r\n    cli = true\r\n    type = user.role\r\n\r\n     return {\"cli\":cli, \"type\":type}\r\n\r\n\r\n  },\r\n\r\n\r\n\r\n  async tokenexp(){  \r\n    let exp = false;\r\n\r\n\r\n    \r\n   let response = await this.getData()\r\n\r\n   if(response.status =='error'){\r\n     return true\r\n   }\r\n    \r\n   let identity = response.result;\r\n\r\n   let identity_exp = identity.exp; // fecha de expiración\r\n   let date = dayjs().format(); // fecha actual\r\n   date < identity_exp? exp : exp = true; \r\n\r\n   \r\n    return exp;\r\n  },\r\n\r\n\r\n  \r\n\r\n  async getData(){ \r\n \r\n\r\n    try {              \r\n      \r\n\r\n      let token = this.getToken()\r\n\r\n      if(token==null){\r\n          return {\r\n              status:'error',\r\n              message:'Sesión no valida',\r\n              result:''\r\n          }\r\n      }\r\n\r\n\r\n      let headers =  {'Authorization': token} ;\r\n    \r\n      let response = await axios.post(`/${endpointCodes.post}/info_usr`, {\"data\":token}, {headers});\r\n    \r\n      \r\n      return response.data;\r\n\r\n      } catch (error) {\r\n          return {\r\n            status:'error',\r\n            message:'Error al intentar obtener la sesión.',\r\n            result:''\r\n        }\r\n      }\r\n\r\n} ,\r\n\r\n\r\nasync createAuth(){\r\n\r\n       try{\r\n        let token = this.getToken()\r\n\r\n        if(token==null){\r\n            return {\r\n                status:'error',\r\n                message:'Sesión no valida',\r\n                result:''\r\n            }\r\n        }\r\n        let headers =  {'Authorization': token} ;\r\n      \r\n        let response = await axios.post(`/${endpointCodes.post}/create-auth`, {\"data\":token}, {headers});\r\n      \r\n        \r\n        return {\r\n          status:'success',\r\n          result:response.data.result\r\n        };\r\n       }catch (error) {\r\n          return {\r\n            status:'error',\r\n            result:''\r\n          }\r\n       }\r\n      \r\n    },\r\n\r\n    setAth(ath) {\r\n    localStorage.setItem(\"ath\", ath);\r\n    }, \r\n\r\n    async   getAth() {\r\n    let ath = localStorage.getItem(\"ath\");\r\n\r\n    let valid = false;\r\n\r\n    if (ath  && ath  != \"undefined\") {\r\n      try{\r\n        let token = this.getToken()\r\n\r\n        if(token==null){\r\n            return {\r\n                status:'error',\r\n                message:'Sesión no valida',\r\n                result:''\r\n            }\r\n        }\r\n        let headers =  {'Authorization': token} ;\r\n      \r\n        let response = await axios.post(`/${endpointCodes.post}/get-auth`, {\"token\":ath }, {headers});\r\n      \r\n       response.data.status == 'success' ? valid=true :   valid= false\r\n\r\n       \r\n      }catch (error){\r\n        valid= false;\r\n      }\r\n\r\n\r\n    } else {\r\n      valid= false;\r\n    }\r\n\r\n       return valid;\r\n    },\r\n\r\n    validateIMG: async function(option, img){\r\n      let response = true\r\n      if(!img)return false;\r\n      try{\r\n        const urlback = url+'/'+endpointCodes.get +'/'+option+'/'+img\r\n        response = await axios.get(urlback);\r\n        \r\n        response.data.message ? response = false : response = true\r\n      }catch(err){\r\n        console.log(err)\r\n        return false\r\n      }\r\n\r\n      return response\r\n    }\r\n\r\n\r\n\r\n\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAAQC,GAAG,EAACC,aAAa,QAAO,iBAAiB;AAEjD,IAAIC,SAAS,GAAC,EAAE;AAChB,eAAe;EAGbC,QAAQ,CAACC,KAAK,EAAE;IACdC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAC;EACpC,CAAC;EAEDG,QAAQ,GAAG;IACT,IAAIH,KAAK,GAAGC,YAAY,CAACG,OAAO,CAAC,KAAK,CAAC;IAEvC,IAAIJ,KAAK,IAAIA,KAAK,IAAI,WAAW,IAAIA,KAAK,IAAI,EAAE,EAAE;MAChDF,SAAS,GAAGE,KAAK;IACnB,CAAC,MAAM;MACLF,SAAS,GAAG,IAAI;IAClB;IAEA,OAAOA,SAAS;EAClB,CAAC;EAGDO,OAAO,CAACC,IAAI,EAAC;IACX,IAAIC,KAAK,GAAG,KAAK;IACjB,IAAIC,IAAI,GAAG,MAAM;IAEjB,IAAGF,IAAI,IAAIG,SAAS,IAAIH,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,EAAC;MACjD,OAAO;QAAC,OAAO,EAACC,KAAK;QAAE,MAAM,EAACC;MAAI,CAAC;IACrC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAID,SAAS,IAAIH,IAAI,CAACI,IAAI,IAAI,IAAI,IAAIJ,IAAI,CAACI,IAAI,IAAG,EAAE,EAAC;MAC/D,OAAO;QAAC,OAAO,EAACH,KAAK;QAAE,MAAM,EAACC;MAAI,CAAC;IACrC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAI,OAAO,IAAIJ,IAAI,CAACI,IAAI,IAAI,WAAW,EAAE;MACnD,OAAO;QAAC,OAAO,EAACH,KAAK;QAAE,MAAM,EAACC;MAAI,CAAC;IACrC;;IAEA;IACAD,KAAK,GAAG,IAAI;IACZC,IAAI,GAAGF,IAAI,CAACI,IAAI;IAEf,OAAO;MAAC,OAAO,EAACH,KAAK;MAAE,MAAM,EAACC;IAAI,CAAC;EAGtC,CAAC;EAEDG,KAAK,CAACL,IAAI,EAAC;IACT,IAAIM,GAAG,GAAG,KAAK;IACf,IAAIJ,IAAI,GAAG,MAAM;IAEjB,IAAGF,IAAI,IAAIG,SAAS,IAAIH,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,EAAC;MACjD,OAAO;QAAC,KAAK,EAACM,GAAG;QAAE,MAAM,EAACJ;MAAI,CAAC;IACjC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAID,SAAS,IAAIH,IAAI,CAACI,IAAI,IAAI,IAAI,IAAIJ,IAAI,CAACI,IAAI,IAAG,EAAE,EAAC;MAC/D,OAAO;QAAC,KAAK,EAACE,GAAG;QAAE,MAAM,EAACJ;MAAI,CAAC;IACjC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAI,aAAa,EAAE;MAC7B,OAAO;QAAC,KAAK,EAACE,GAAG;QAAE,MAAM,EAACJ;MAAI,CAAC;IACjC;;IAEA;IACAI,GAAG,GAAG,IAAI;IACVJ,IAAI,GAAGF,IAAI,CAACI,IAAI;IAEf,OAAO;MAAC,KAAK,EAACE,GAAG;MAAE,MAAM,EAACJ;IAAI,CAAC;EAGlC,CAAC;EAEDK,KAAK,CAACP,IAAI,EAAC;IACT,IAAIQ,GAAG,GAAG,KAAK;IACf,IAAIN,IAAI,GAAG,MAAM;IAEjB,IAAGF,IAAI,IAAIG,SAAS,IAAIH,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,EAAC;MACjD,OAAO;QAAC,KAAK,EAACQ,GAAG;QAAE,MAAM,EAACN;MAAI,CAAC;IACjC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAID,SAAS,IAAIH,IAAI,CAACI,IAAI,IAAI,IAAI,IAAIJ,IAAI,CAACI,IAAI,IAAG,EAAE,EAAC;MAC/D,OAAO;QAAC,KAAK,EAACI,GAAG;QAAE,MAAM,EAACN;MAAI,CAAC;IACjC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAI,UAAU,EAAE;MAC1B,OAAO;QAAC,KAAK,EAACI,GAAG;QAAE,MAAM,EAACN;MAAI,CAAC;IACjC;;IAEA;IACAM,GAAG,GAAG,IAAI;IACVN,IAAI,GAAGF,IAAI,CAACI,IAAI;IAEf,OAAO;MAAC,KAAK,EAACI,GAAG;MAAE,MAAM,EAACN;IAAI,CAAC;EAGlC,CAAC;EAEDO,KAAK,CAACT,IAAI,EAAC;IACT,IAAIU,GAAG,GAAG,KAAK;IACf,IAAIR,IAAI,GAAG,MAAM;IAEjB,IAAGF,IAAI,IAAIG,SAAS,IAAIH,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,EAAC;MACjD,OAAO;QAAC,KAAK,EAACU,GAAG;QAAE,MAAM,EAACR;MAAI,CAAC;IACjC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAID,SAAS,IAAIH,IAAI,CAACI,IAAI,IAAI,IAAI,IAAIJ,IAAI,CAACI,IAAI,IAAG,EAAE,EAAC;MAC/D,OAAO;QAAC,KAAK,EAACM,GAAG;QAAE,MAAM,EAACR;MAAI,CAAC;IACjC;IAEA,IAAGF,IAAI,CAACI,IAAI,IAAI,SAAS,EAAE;MACzB,OAAO;QAAC,KAAK,EAACM,GAAG;QAAE,MAAM,EAACR;MAAI,CAAC;IACjC;;IAEA;IACAQ,GAAG,GAAG,IAAI;IACVR,IAAI,GAAGF,IAAI,CAACI,IAAI;IAEf,OAAO;MAAC,KAAK,EAACM,GAAG;MAAE,MAAM,EAACR;IAAI,CAAC;EAGlC,CAAC;EAID,MAAMS,QAAQ,GAAE;IACd,IAAIC,GAAG,GAAG,KAAK;IAIhB,IAAIC,QAAQ,GAAG,MAAM,IAAI,CAACC,OAAO,EAAE;IAEnC,IAAGD,QAAQ,CAACE,MAAM,IAAG,OAAO,EAAC;MAC3B,OAAO,IAAI;IACb;IAEA,IAAIC,QAAQ,GAAGH,QAAQ,CAACI,MAAM;IAE9B,IAAIC,YAAY,GAAGF,QAAQ,CAACJ,GAAG,CAAC,CAAC;IACjC,IAAIO,IAAI,GAAG9B,KAAK,EAAE,CAAC+B,MAAM,EAAE,CAAC,CAAC;IAC7BD,IAAI,GAAGD,YAAY,GAAEN,GAAG,GAAGA,GAAG,GAAG,IAAI;IAGpC,OAAOA,GAAG;EACZ,CAAC;EAKD,MAAME,OAAO,GAAE;IAGb,IAAI;MAGF,IAAIpB,KAAK,GAAG,IAAI,CAACG,QAAQ,EAAE;MAE3B,IAAGH,KAAK,IAAE,IAAI,EAAC;QACX,OAAO;UACHqB,MAAM,EAAC,OAAO;UACdM,OAAO,EAAC,kBAAkB;UAC1BJ,MAAM,EAAC;QACX,CAAC;MACL;MAGA,IAAIK,OAAO,GAAI;QAAC,eAAe,EAAE5B;MAAK,CAAC;MAEvC,IAAImB,QAAQ,GAAG,MAAMzB,KAAK,CAACmC,IAAI,CAAE,IAAGhC,aAAa,CAACgC,IAAK,WAAU,EAAE;QAAC,MAAM,EAAC7B;MAAK,CAAC,EAAE;QAAC4B;MAAO,CAAC,CAAC;MAG7F,OAAOT,QAAQ,CAACW,IAAI;IAEpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO;QACLV,MAAM,EAAC,OAAO;QACdM,OAAO,EAAC,sCAAsC;QAC9CJ,MAAM,EAAC;MACX,CAAC;IACH;EAEN,CAAC;EAGD,MAAMS,UAAU,GAAE;IAEX,IAAG;MACF,IAAIhC,KAAK,GAAG,IAAI,CAACG,QAAQ,EAAE;MAE3B,IAAGH,KAAK,IAAE,IAAI,EAAC;QACX,OAAO;UACHqB,MAAM,EAAC,OAAO;UACdM,OAAO,EAAC,kBAAkB;UAC1BJ,MAAM,EAAC;QACX,CAAC;MACL;MACA,IAAIK,OAAO,GAAI;QAAC,eAAe,EAAE5B;MAAK,CAAC;MAEvC,IAAImB,QAAQ,GAAG,MAAMzB,KAAK,CAACmC,IAAI,CAAE,IAAGhC,aAAa,CAACgC,IAAK,cAAa,EAAE;QAAC,MAAM,EAAC7B;MAAK,CAAC,EAAE;QAAC4B;MAAO,CAAC,CAAC;MAGhG,OAAO;QACLP,MAAM,EAAC,SAAS;QAChBE,MAAM,EAACJ,QAAQ,CAACW,IAAI,CAACP;MACvB,CAAC;IACF,CAAC,QAAOQ,KAAK,EAAE;MACZ,OAAO;QACLV,MAAM,EAAC,OAAO;QACdE,MAAM,EAAC;MACT,CAAC;IACJ;EAEH,CAAC;EAEDU,MAAM,CAACC,GAAG,EAAE;IACZjC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEgC,GAAG,CAAC;EAChC,CAAC;EAED,MAAQC,MAAM,GAAG;IACjB,IAAID,GAAG,GAAGjC,YAAY,CAACG,OAAO,CAAC,KAAK,CAAC;IAErC,IAAIgC,KAAK,GAAG,KAAK;IAEjB,IAAIF,GAAG,IAAKA,GAAG,IAAK,WAAW,EAAE;MAC/B,IAAG;QACD,IAAIlC,KAAK,GAAG,IAAI,CAACG,QAAQ,EAAE;QAE3B,IAAGH,KAAK,IAAE,IAAI,EAAC;UACX,OAAO;YACHqB,MAAM,EAAC,OAAO;YACdM,OAAO,EAAC,kBAAkB;YAC1BJ,MAAM,EAAC;UACX,CAAC;QACL;QACA,IAAIK,OAAO,GAAI;UAAC,eAAe,EAAE5B;QAAK,CAAC;QAEvC,IAAImB,QAAQ,GAAG,MAAMzB,KAAK,CAACmC,IAAI,CAAE,IAAGhC,aAAa,CAACgC,IAAK,WAAU,EAAE;UAAC,OAAO,EAACK;QAAI,CAAC,EAAE;UAACN;QAAO,CAAC,CAAC;QAE9FT,QAAQ,CAACW,IAAI,CAACT,MAAM,IAAI,SAAS,GAAGe,KAAK,GAAC,IAAI,GAAKA,KAAK,GAAE,KAAK;MAGhE,CAAC,QAAOL,KAAK,EAAC;QACZK,KAAK,GAAE,KAAK;MACd;IAGF,CAAC,MAAM;MACLA,KAAK,GAAE,KAAK;IACd;IAEG,OAAOA,KAAK;EACf,CAAC;EAEDC,WAAW,EAAE,gBAAeC,MAAM,EAAEC,GAAG,EAAC;IACtC,IAAIpB,QAAQ,GAAG,IAAI;IACnB,IAAG,CAACoB,GAAG,EAAC,OAAO,KAAK;IACpB,IAAG;MACD,MAAMC,OAAO,GAAG5C,GAAG,GAAC,GAAG,GAACC,aAAa,CAAC4C,GAAG,GAAE,GAAG,GAACH,MAAM,GAAC,GAAG,GAACC,GAAG;MAC7DpB,QAAQ,GAAG,MAAMzB,KAAK,CAAC+C,GAAG,CAACD,OAAO,CAAC;MAEnCrB,QAAQ,CAACW,IAAI,CAACH,OAAO,GAAGR,QAAQ,GAAG,KAAK,GAAGA,QAAQ,GAAG,IAAI;IAC5D,CAAC,QAAMuB,GAAG,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,OAAO,KAAK;IACd;IAEA,OAAOvB,QAAQ;EACjB;AAKJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}