{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'checkout',\n  data() {\n    return {\n      status: '',\n      message: '',\n      name: '',\n      tarjeta: '',\n      expmonth: '',\n      expyear: '',\n      cvv: '',\n      wait: false,\n      viewModal: false\n    };\n  },\n  /*\r\n   4242424242424242\r\n  */\n  mounted() {\n    $(document).ready(function () {\n      OpenPay.setId('m153lscp7j3hfbrapwqm');\n      OpenPay.setApiKey('pk_9a72747ad861466da7dcca4297cdc600');\n      OpenPay.setSandboxMode(true);\n      //Se genera el id de dispositivo\n      var deviceSessionId = OpenPay.deviceData.setup(\"payment-form\", \"deviceIdHiddenFieldName\");\n      $('#pay-button').on('click', function (event) {\n        event.preventDefault();\n        $(\"#pay-button\").prop(\"disabled\", true);\n        OpenPay.token.extractFormAndCreate('payment-form', sucess_callbak, error_callbak);\n      });\n      var sucess_callbak = function (response) {\n        var token_id = response.data.id;\n        $('#token_id').val(token_id);\n        // $('#payment-form').submit();\n        //ENVIAR a otra pagina.\n        let isval = execute();\n        if (isval.status == 'success') {\n          // charge(deviceSessionId,token_id)\n        } else {\n          showMessage(isval.message);\n        }\n        console.log(token_id);\n        console.log(deviceSessionId);\n      };\n      var error_callbak = function (response) {\n        var desc = response.data.description != undefined ? response.data.description : response.message;\n        let message = desc; //\"ERROR [\" + response.status + \"] : \" +\n        showMessage(message);\n        //console.log(message)\n        $(\"#pay-button\").prop(\"disabled\", false);\n      };\n    });\n    let showMessage = error => {\n      this.status = 'error';\n      this.message = error;\n      this.delStatus();\n    };\n    let charge = (deviceSessionId, token_id) => {\n      this.wait = true;\n      this.createCharge(deviceSessionId, token_id);\n    };\n    let execute = () => {\n      return this.validar(this.name, this.tarjeta, this.expmonth, this.expyear, this.cvv);\n    };\n  },\n  watch: {\n    cvv: function (value) {\n      let arr = value.split('');\n      let str = '';\n      let count = 0;\n      for (const ctr of arr) {\n        if (!isNaN(ctr) && count < 3 && ctr != ' ') {\n          str += ctr;\n          count++;\n        }\n      }\n      this.cvv = str;\n    },\n    expmonth: function (value) {\n      let arr = value.split('');\n      let str = '';\n      let count = 0;\n      for (const ctr of arr) {\n        if (!isNaN(ctr) && count < 2 && ctr != ' ') {\n          let newstr = str + ctr;\n          newstr = parseInt(newstr);\n          if (newstr <= 12) {\n            str += ctr;\n            count++;\n          }\n        }\n      }\n      this.expmonth = str;\n    },\n    expyear: function (value) {\n      let arr = value.split('');\n      let str = '';\n      let count = 0;\n      for (const ctr of arr) {\n        if (!isNaN(ctr) && count < 2 && ctr != ' ') {\n          str += ctr;\n          count++;\n        }\n      }\n      this.expyear = str;\n    },\n    tarjeta: function (value) {\n      let arr = value.split('');\n      let str = '';\n      let count = 0;\n      for (const ctr of arr) {\n        if (!isNaN(ctr) && count < 19 && ctr != ' ') {\n          str += ctr;\n          count++;\n        }\n      }\n      this.tarjeta = str;\n    }\n  },\n  computed: {\n    payment() {\n      return this.$store.getters[\"conekta/getAdded\"];\n    }\n  },\n  methods: {\n    ...mapActions('conekta', ['setHistoryOptionCnk']),\n    ...mapActions('conekta', ['setAddedCnk']),\n    delStatus: function () {\n      setTimeout(() => this.delMsgs(), 5000);\n    },\n    delMsgs: function () {\n      this.status = \"\";\n      this.message = \"\";\n    },\n    refre: function () {\n      setTimeout(() => this.$router.go(), 200);\n    },\n    createCharge: async function (device, source) {\n      let infopayment = this.payment;\n      let data = {\n        \"source\": source,\n        \"device\": device,\n        \"name\": infopayment.name,\n        \"email\": infopayment.email,\n        \"items\": infopayment.items,\n        \"cliente\": infopayment.cliente,\n        \"mesa\": infopayment.mesa,\n        \"restaurante\": infopayment.restaurante,\n        \"planta\": infopayment.planta,\n        \"mesero\": infopayment.mesero,\n        \"propina\": infopayment.propina,\n        \"subtotal\": infopayment.subtotal,\n        \"total\": infopayment.total,\n        \"metodo\": infopayment.metodo,\n        \"invitado\": infopayment.invitado\n      };\n      let result = await this.$store.dispatch(\"payment/addItemPym\", {\n        option: 'payment_card',\n        item: data\n      });\n      if (result.status != 'success') {\n        this.viewModal = true;\n      } else {\n        //si todo es correcto.\n        this.wait = false;\n        this.setAddedCnk('');\n        this.setHistoryOptionCnk('Tarjeta');\n        this.$socket.emit(\"mesa:openpay\", {\n          id: this.$route.params.id\n        });\n      }\n      /*\r\n      \r\n       */\n    },\n\n    validar(name, tarjeta, expmonth, expyear, cvv) {\n      let srt = '';\n      let count = 0;\n      if (name == '') {\n        srt += ' El nombre es requerido.';\n        count++;\n      }\n      if (tarjeta == '') {\n        srt += ' La tarjeta es requerida.';\n        count++;\n      }\n      if (expmonth == '') {\n        srt += ' El mes es requerido.';\n        count++;\n      }\n      if (expyear == '') {\n        srt += ' El año es requerido. ';\n        count++;\n      }\n      if (cvv == '') {\n        srt += ' El cvv es requerido. ';\n        count++;\n      }\n      if (count > 0) {\n        // this.status='error'\n        // this.message =srt\n        return {\n          status: 'error',\n          message: srt\n        };\n      } else {\n        return {\n          status: 'success',\n          message: ''\n        };\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA4HA;AAEA;EACAA;EAEAC;IACA;MACAC;MACAC;MACAH;MACAI;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACA;AACA;AACA;EACAC;IAEAC;MAEAC;MACAA;MACAA;MACA;MACA;MAEAD;QACAE;QACAF;QACAC;MACA;MAEA;QAEA;QACAD;QACA;QACA;QACA;QAEA;UACA;QAAA,CACA;UACAG;QACA;QAGAC;QACAA;MAEA;MAEA;QAEA;QACA;QACAD;QACA;QACAH;MACA;IAEA;IAEA;MACA;MACA;MACA;IACA;IAEA;MACA;MACA;IACA;IAEA;MACA;IACA;EACA;EACAK;IACAT;MAEA;MAEA;MACA;MACA;QAEA;UACAU;UACAC;QACA;MACA;MAEA;IAEA;IAEAb;MAEA;MAEA;MACA;MACA;QAGA;UACA;UACAc;UACA;YACAF;YACAC;UACA;QAEA;MACA;MAEA;IAEA;IAEAZ;MAEA;MAEA;MACA;MACA;QAEA;UACAW;UACAC;QACA;MACA;MAEA;IAEA;IACAd;MAEA;MAEA;MACA;MAEA;QAEA;UACAa;UACAC;QACA;MACA;MAEA;IAEA;EACA;EACAE;IACAC;MACA;IACA;EACA;EACAC;IACA;IAEA;IACAC;MACAC,iCACA;IACA;IACAC;MACA;MACA;IACA;IAEAC;MACAF;IACA;IACAG;MACA;MAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MAGA;QACAC;QACAC;MACA;MAEA;QACA;MACA;QACA;QACA;QACA;QACA;QACA;UAAAC;QAAA;MACA;MACA;;AAEA;IAEA;;IACAC;MACA;MACA;MACA;QACAC;QACAd;MACA;MAEA;QACAc;QACAd;MACA;MAEA;QACAc;QACAd;MACA;MAEA;QACAc;QACAd;MACA;MAEA;QACAc;QACAd;MACA;MAEA;QACA;QACA;QACA;UACAhB;UACAC;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;EAEA;AAEA","names":["name","data","status","message","tarjeta","expmonth","expyear","cvv","wait","viewModal","mounted","$","OpenPay","event","showMessage","console","watch","str","count","newstr","computed","payment","methods","delStatus","setTimeout","delMsgs","refre","createCharge","option","item","id","validar","srt"],"sourceRoot":"src/components/test","sources":["checkoutTest.vue"],"sourcesContent":["<template>\r\n\r\n  <div id=\"checkout_view\">\r\n   \r\n    <div>\r\n      <form  id=\"payment-form\">\r\n        <input type=\"hidden\" name=\"token_id\" id=\"token_id\" />\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"use_card_points\"\r\n          id=\"use_card_points\"\r\n          value=\"false\"\r\n        />\r\n        <div class=\"pymnt-itm card active\">\r\n          \r\n          <div class=\"pymnt-cntnt\">\r\n            <div class=\"card-expl dflx\">\r\n              <div class=\"box-card credit\">\r\n                  <h4>Tarjetas de <span>crédito</span></h4>\r\n                  <img src=\"../../assets/TDC.svg\" alt=\"Iconos tarjetas de crédito aceptadas.\">\r\n              </div>\r\n              <div class=\"box-card debit\">\r\n                  <h4>Tarjetas de <span> débito</span></h4>\r\n                   <img src=\"../../assets/TDD.svg\" alt=\"Iconos tarjetas de débito aceptadas.\">\r\n                </div>\r\n            </div>\r\n            <div class=\"sctn-row\">\r\n              <div class=\"sctn-col grp1 l\">\r\n                <label>Nombre del titular</label\r\n                ><input\r\n                  v-model=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Como aparece en la tarjeta\"\r\n                  autocomplete=\"off\"\r\n                  data-openpay-card=\"holder_name\"\r\n                />\r\n              </div>\r\n              <div class=\"sctn-col grp1\">\r\n                <label>Número de tarjeta</label\r\n                ><input\r\n                  v-model=\"tarjeta\"\r\n                  type=\"text\"\r\n                  autocomplete=\"off\"\r\n                  data-openpay-card=\"card_number\"\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"sctn-row  dflx\">\r\n              <div class=\"sctn-col grp2  l\">\r\n                <label>Fecha de expiración</label>\r\n                <div class=\"dflx\">\r\n                   <div class=\"sctn-col half l\">\r\n                  <input\r\n                  v-model=\"expmonth\"\r\n                   class=\"inp1\"\r\n                    type=\"text\"\r\n                    placeholder=\"MM\"\r\n                    data-openpay-card=\"expiration_month\"\r\n                  />\r\n                </div>\r\n                <div class=\"sctn-col half l\">\r\n                  <input\r\n                  v-model=\"expyear\"\r\n                  class=\"inp2\"\r\n                    type=\"text\"\r\n                    placeholder=\"YY\"\r\n                    data-openpay-card=\"expiration_year\"\r\n                  />\r\n                </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"sctn-col grp3 cvv\">\r\n                <label>CVV</label>\r\n                <div class=\"sctn-col half l\">\r\n                  <input\r\n                  v-model=\"cvv\"\r\n                    type=\"text\"\r\n                    placeholder=\"3 dígitos\"\r\n                    autocomplete=\"off\"\r\n                    data-openpay-card=\"cvv2\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"openpay\">\r\n              <div class=\"logo dflx\">\r\n                <p>Transacciones realizadas vía:</p>\r\n                <img src=\"../../assets/openpay.svg\" alt=\"Icono openpay\">\r\n              </div>\r\n              <div class=\"shield dflx\">\r\n                 <img src=\"../../assets/security.svg\" alt=\"Icono escudo.\">\r\n                <p>Tus pagos se realizan de forma segura con encriptación de 256\r\n                bits</p>\r\n               \r\n              </div>\r\n            </div>\r\n            <div class=\"sctn-row\">\r\n             <a v-if=\"wait==false\" class=\"button rght\" id=\"pay-button\">Pagar</a> \r\n               <p  v-if=\"wait\" class=\"button rght\" id=\"pay-button2\"><img src=\"../../assets/Cargando0.gif\" alt=\"cargando gif\"></p>\r\n            </div>\r\n\r\n            <p id=\"error_msg\" v-if=\"status=='error'\" >\r\n              {{message}}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n        <div v-if=\"viewModal\" class=\"modal_view_log\">\r\n            <div class=\"ModalOut\">\r\n                <img class=\"ml_logo\" src=\"\" alt=\"icono app\"> <!-- icono app -->\r\n                <div class=\"MContent2\">\r\n                    <img src=\"\"> <!-- icono triste -->\r\n                    <p>LO SENTIMOS HA OCURRIDO UN ERROR AL INTENTAR REALIZAR TU PAGO, INTENTALO DE NUEVO.</p>\r\n                </div>\r\n                <a v-on:click=\"viewModal=false, refre()\"><p class=\"GH\"><span>ACEPTAR</span></p></a>\r\n            </div>\r\n        </div>\r\n  </div> \r\n</template>\r\n<script>\r\n\r\nimport {mapActions} from 'vuex';\r\n\r\nexport default {\r\n    name:'checkout'\r\n    ,\r\n    data(){\r\n      return{\r\n        status:'',\r\n        message:'',\r\n        name:'',\r\n        tarjeta:'',\r\n        expmonth:'',\r\n        expyear:'',\r\n        cvv:'',\r\n        wait:false,\r\n        viewModal: false,\r\n      }\r\n    },\r\n    /*\r\n     4242424242424242\r\n    */\r\n    mounted() {\r\n       \r\n         $(document).ready(function() {\r\n\r\n            OpenPay.setId('m153lscp7j3hfbrapwqm');\r\n            OpenPay.setApiKey('pk_9a72747ad861466da7dcca4297cdc600');\r\n            OpenPay.setSandboxMode(true);\r\n            //Se genera el id de dispositivo\r\n            var deviceSessionId = OpenPay.deviceData.setup(\"payment-form\", \"deviceIdHiddenFieldName\");\r\n            \r\n            $('#pay-button').on('click', function(event) {\r\n                event.preventDefault();\r\n                $(\"#pay-button\").prop( \"disabled\", true);\r\n                OpenPay.token.extractFormAndCreate('payment-form', sucess_callbak, error_callbak);                \r\n            });\r\n\r\n            var sucess_callbak = function(response) {\r\n            \r\n              var token_id = response.data.id;\r\n              $('#token_id').val(token_id);\r\n             // $('#payment-form').submit();\r\n             //ENVIAR a otra pagina.\r\n              let isval = execute()\r\n             \r\n              if(isval.status=='success'){\r\n                // charge(deviceSessionId,token_id)\r\n              }else{\r\n                 showMessage(isval.message)\r\n              }\r\n              \r\n             \r\n             console.log(token_id)\r\n             console.log(deviceSessionId)\r\n     \r\n            };\r\n\r\n            var error_callbak = function(response) {\r\n              \r\n                var desc = response.data.description != undefined ? response.data.description : response.message;\r\n                let message =  desc; //\"ERROR [\" + response.status + \"] : \" +\r\n               showMessage(message)\r\n              //console.log(message)\r\n               $(\"#pay-button\").prop(\"disabled\", false);\r\n            };\r\n\r\n        });\r\n\r\n        let showMessage =(error)=>{\r\n           this.status ='error'\r\n           this.message = error\r\n           this.delStatus()\r\n        } \r\n\r\n        let  charge =(deviceSessionId,token_id)=>{\r\n            this.wait = true\r\n            this.createCharge(deviceSessionId,token_id)\r\n        }\r\n\r\n        let execute= () => {\r\n         return   this.validar( this.name, this.tarjeta, this.expmonth, this.expyear, this.cvv)\r\n        }\r\n    },\r\n    watch:{\r\n        cvv: function(value){\r\n        \r\n          let arr = value.split('')\r\n       \r\n          let str =''\r\n          let count =0;\r\n          for (const ctr of arr) {\r\n              \r\n              if(!isNaN(ctr) && count<3 && ctr !=' '){\r\n                str += ctr\r\n                count++\r\n              } \r\n          }\r\n\r\n          this.cvv= str\r\n          \r\n        },\r\n\r\n        expmonth: function(value){\r\n        \r\n          let arr = value.split('')\r\n       \r\n          let str =''\r\n          let count =0;\r\n          for (const ctr of arr) {\r\n             \r\n            \r\n              if(!isNaN(ctr) && count<2 && ctr !=' '){\r\n                let newstr = str + ctr\r\n               newstr = parseInt(newstr)\r\n               if(newstr <=12){\r\n                str += ctr\r\n                count++\r\n               }\r\n\r\n              } \r\n          }\r\n\r\n          this.expmonth= str\r\n          \r\n        },\r\n\r\n         expyear: function(value){\r\n        \r\n          let arr = value.split('')\r\n       \r\n          let str =''\r\n          let count =0;\r\n          for (const ctr of arr) {\r\n     \r\n              if(!isNaN(ctr) && count<2 && ctr !=' '){\r\n                str += ctr\r\n                count++\r\n              } \r\n          }\r\n\r\n          this.expyear= str\r\n          \r\n        },\r\n        tarjeta: function(value){\r\n        \r\n          let arr = value.split('')\r\n       \r\n          let str =''\r\n          let count =0;\r\n         \r\n          for (const ctr of arr) {\r\n     \r\n              if(!isNaN(ctr) && count<19  && ctr !=' '){\r\n                str += ctr\r\n                count++\r\n              } \r\n          }\r\n\r\n          this.tarjeta= str\r\n          \r\n        }\r\n    },\r\n    computed:{\r\n         payment(){\r\n                return this.$store.getters[\"conekta/getAdded\"]\r\n         },\r\n    },\r\n    methods:{\r\n          ...mapActions('conekta', ['setHistoryOptionCnk']),\r\n     \r\n        ...mapActions('conekta', ['setAddedCnk']),\r\n        delStatus: function () {\r\n            setTimeout(() => this.delMsgs()\r\n            ,5000);\r\n        },\r\n        delMsgs: function(){\r\n            this.status=\"\"\r\n            this.message=\"\"\r\n        },\r\n\r\n         refre: function(){\r\n            setTimeout(() => this.$router.go(), 200);\r\n        },\r\n        createCharge: async function(device, source){\r\n            let infopayment = this.payment\r\n\r\n            let data ={\r\n              \"source\": source, \r\n              \"device\": device,\r\n              \"name\": infopayment.name,\r\n              \"email\": infopayment.email,\r\n              \"items\": infopayment.items,\r\n              \"cliente\": infopayment.cliente,\r\n              \"mesa\": infopayment.mesa,\r\n              \"restaurante\": infopayment.restaurante,\r\n              \"planta\": infopayment.planta,\r\n              \"mesero\": infopayment.mesero,\r\n              \"propina\": infopayment.propina,\r\n              \"subtotal\":infopayment.subtotal,\r\n              \"total\": infopayment.total,\r\n              \"metodo\": infopayment.metodo,\r\n              \"invitado\": infopayment.invitado\r\n            }\r\n\r\n\r\n              let result = await this.$store.dispatch(\"payment/addItemPym\", {\r\n                option: 'payment_card',\r\n                item: data,\r\n              });\r\n\r\n              if(result.status !='success'){\r\n                    this.viewModal=true\r\n              }else{\r\n                 //si todo es correcto.\r\n                 this.wait=false\r\n                 this.setAddedCnk('')\r\n                 this.setHistoryOptionCnk('Tarjeta')\r\n                   this.$socket.emit(\"mesa:openpay\",{id:this.$route.params.id}); \r\n              }\r\n            /*\r\n            \r\n             */\r\n            \r\n        },\r\n        validar(name, tarjeta, expmonth, expyear, cvv){\r\n          let srt =''\r\n          let count =0\r\n           if(name==''){\r\n              srt +=' El nombre es requerido.'\r\n              count++\r\n           }\r\n\r\n           if(tarjeta==''){\r\n              srt +=' La tarjeta es requerida.'\r\n              count++\r\n           }\r\n\r\n           if(expmonth==''){\r\n              srt +=' El mes es requerido.'\r\n              count++\r\n           }\r\n\r\n           if(expyear==''){\r\n              srt +=' El año es requerido. '\r\n              count++\r\n           }\r\n\r\n           if(cvv==''){\r\n              srt +=' El cvv es requerido. '\r\n              count++\r\n           }\r\n\r\n           if(count >0){\r\n           // this.status='error'\r\n           // this.message =srt\r\n            return {\r\n              status:'error',\r\n              message: srt\r\n            }\r\n            }else{\r\n                  return {\r\n               status:'success',\r\n              message: ''\r\n               }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n};\r\n</script>\r\n<style scoped>\r\n#checkout_view{\r\n    \r\n    width: 85%;\r\n    margin: auto;\r\n   margin-top: 5.384615384615385VW;\r\n}\r\n\r\n\r\n.box-card:first-child{\r\n        width: 48%;\r\n      border-right: 0.5px solid #bebebe;\r\n      padding-left: 2vw;\r\n}.box-card:last-child{\r\n         width: 42.6%;\r\n          padding-left: 7.435897435897436VW;\r\n}\r\n\r\n.box-card{\r\n  margin-bottom: 14.358974358974358VW;\r\n}\r\n\r\n.card-expl h4{\r\n  font-family: 'Lato';\r\n  font-size: 3.5897435897435894VW;\r\n  color: var(--color-2);\r\n  font-weight: 500;\r\n  margin: 0vw;\r\n  margin-bottom: 1.282051282051282VW;\r\n}.card-expl h4 span{\r\n  font-weight: 700;\r\n}\r\n\r\n.grp1{\r\n  margin-bottom: 4.5307692307692315VW;\r\n}\r\n.grp1 label{\r\n  display: grid;\r\n}\r\n\r\n#payment-form label{\r\n  font-size: 3.5897435897435894VW;\r\n  color: var(--color-2);\r\n  font-weight: 700;\r\n  font-family: 'Lato';\r\n  margin-bottom: 2.051282051282051VW;\r\n      padding-left: 4vw;\r\n}\r\n\r\n.grp1 input{\r\n   border-radius: 7.5vw 7.5vw 7.5vw 7.5vw;\r\n              border: .2vw solid var(--color-2) ;\r\n              height: 4VW;\r\n              width: 94.5%;\r\n              padding-left: 3.523076923076923VW;\r\n              padding-top: 2.4871794871794872VW;\r\n              padding-bottom: 2.4871794871794872VW;\r\n}\r\n#payment-form input::placeholder{\r\n   color: var(--color-2);\r\n   font-style: italic;\r\n   font-family: 'Lato';\r\n   font-size: 3.5897435897435894VW;\r\n   font-weight: 400;\r\n}\r\n\r\n.grp2{\r\n  width: 57%;\r\n}\r\n\r\n.grp3{\r\n  margin-left: 3.2999999999999994VW;\r\n}\r\n\r\n.grp2 input{\r\n\r\n   border: .2vw solid var(--color-2) ;\r\n\r\n    height: 4VW;\r\n           \r\n    padding-left: 3.523076923076923VW;\r\n    padding-top: 2.4871794871794872VW;\r\n    padding-bottom: 2.4871794871794872VW;\r\n}\r\n\r\n.grp3{\r\n  padding-left: 1vw;\r\n}\r\n\r\n.grp3 input{\r\n  border-radius: 7.5vw 7.5vw 7.5vw 7.5vw;\r\n   border: .2vw solid var(--color-2) ;\r\n   width: 81%;\r\n    height: 4VW;\r\n           \r\n    padding-left: 3.523076923076923VW;\r\n    padding-top: 2.4871794871794872VW;\r\n    padding-bottom: 2.4871794871794872VW;\r\n    margin-left: 3vw;\r\n}\r\n\r\ninput.inp1{\r\n    border-radius: 7.5vw 0vw 0vw 7.5vw;\r\n   \r\n    width: 78%;\r\n}\r\ninput.inp2{\r\n    border-radius:0vw 7.5vw  7.5vw  0vw;\r\n    \r\n     width: 78%;\r\n}\r\n\r\n.openpay{\r\n  border-bottom: 0.5px solid #bebebe;\r\n  border-top: 0.5px solid #bebebe;\r\n  margin-top: 7.351282051282052VW;\r\n  margin-bottom: 8.205128205128204VW;\r\n  padding-top: 4.358974358974359VW;\r\n  padding-bottom: 4.358974358974359VW;\r\n}\r\n\r\n.logo p{\r\nfont-size: 3.5VW;\r\n color: rgba(134, 134, 134, 1);\r\n font-weight: 600;\r\n}\r\n\r\n.logo img{\r\n  width: 28.717948717948715VW;\r\n  height: 8.205128205128204VW;\r\n  margin-left: 3vw;\r\n  padding-top: 1vw;\r\n}\r\n\r\n.shield p{\r\n   color: rgba(134, 134, 134, 1);\r\n   font-size: 3.5VW;\r\n   margin-left: 1.5vw;\r\n}\r\n\r\n.shield img{\r\n  width: 7.948717948717948VW;\r\n  height: 9.487179487179487VW;\r\n  padding-top: 4vw;\r\n  \r\n}\r\n\r\na#pay-button{\r\n  background: var(--color-1);\r\n   border-radius: 7.5vw 7.5vw 7.5vw 7.5vw;\r\n   color:rgba(255, 255, 255, 1) ;\r\n   font-size: 3.076923076923077VW;\r\n   font-weight: 800;\r\n      padding: 3vw 16vw;\r\n    margin-left: 25%;\r\n   text-align: center;\r\n}\r\n\r\n\r\np#pay-button2{\r\n  background: var(--color-1);\r\n   border-radius: 7.5vw 7.5vw 7.5vw 7.5vw;\r\n   color:rgba(255, 255, 255, 1) ;\r\n   font-size: 3.076923076923077VW;\r\n   font-weight: 800;\r\n      padding: 1vw 1vw;\r\n    margin-left: 25%;\r\n   text-align: center;\r\n   width: 46.4%;\r\n}\r\np#pay-button2 img{\r\n     width: 21vw;\r\n    height: 5.5vw;\r\n    padding-top: 1vw;\r\n}\r\n\r\n.box-card img{\r\n  width: 28.974358974358978VW;\r\n  height: 13.076923076923078VW;\r\n}\r\n\r\n#error_msg{\r\n  background: var(--color-1);\r\n     color:rgba(255, 255, 255, 1) ;\r\n   font-size: 3.076923076923077VW;\r\n   padding: 2vw;\r\n   text-align: center;\r\n   margin-top: 5vw;\r\n   border-radius: 7.5vw 7.5vw 7.5vw 7.5vw;\r\n}\r\n\r\n\r\n/** modal error */\r\n.ModalOut {\r\n    width: 67.6923076923077VW;\r\n    height: 97.94871794871794VW;\r\n    background-color: #FFFFFF;\r\n    border-radius: 7.6923076923076925VW;\r\n    position: absolute !important;\r\n    /*margin-left: 16vw;\r\n    margin-top: 59vw;*/\r\n}\r\n.MContent2 {\r\n    width: 51.7948717948718VW;\r\n    height: 40.897436VW;\r\n    border: 0.6vw solid #F54C49;\r\n    border-radius: 7.6923076923076925VW;\r\n    text-align: center;\r\n    margin-left: 7vw;\r\n}\r\n.MContent2 img {\r\n    width: 11.025641025641026VW;\r\n    height: 11.025641025641026VW;\r\n    margin-top: 4.615384615384616VW;\r\n}\r\n.MContent2 p {\r\n    width: 41vw;\r\n    margin-inline: auto;\r\n    font-size: 3.076923076923077VW;\r\n    color: #215675;\r\n    line-height: 3.6923076923076925VW;\r\n    font-weight: 600;\r\n}\r\np.GH {\r\n    font-size: 3.5897435897435894VW;\r\n    color: #215675;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    margin-top: 8.461538461538462VW;\r\n}\r\n.GH span {\r\n    font-weight: 800;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}